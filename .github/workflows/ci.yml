name: CI

on:
  - push
  - pull_request

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest

    env:
      DOTNET_NOLOGO: 'true'
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'

    steps:
      - name: ⏬ Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🔽 Install dotnet
        uses: actions/setup-dotnet@v1

      - name: 🔍 Print dotnet info
        run: dotnet --info

      - id: version
        name: 🔍 Determine Version
        shell: bash
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION: '$VERSION'"
          echo "::set-output name=version::$version"

      - name: 🔽 Restore
        run: dotnet restore -p:Configuration=Release

      - name: 🔨 Build
        run: dotnet build --configuration Release

      - name: 📦 Pack
        run: dotnet pack --configuration Release --no-build

      - name: 🧪 Test (build samples)
        run: dotnet build -p:YoloDevSdkVersion=${{ steps.version.outputs.version }}
        working-directory: sample

      # - name: 🔼 Upload packages as artifact
      #   uses: actions/upload-artifact@v2
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   with:
      #     name: nuget
      #     path: artifacts/nuget/

      # - name: 🔼 Upload global.json as artifact
      #   uses: actions/upload-artifact@v2
      #   if: ${{ matrix.os == 'ubuntu-latest' }}
      #   with:
      #     name: global-json
      #     path: global.json
